// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$inst-big-name: 'inst-big'
$inst-big-x: 551px
$inst-big-y: 0px
$inst-big-offset-x: -551px
$inst-big-offset-y: 0px
$inst-big-width: 100px
$inst-big-height: 100px
$inst-big-total-width: 871px
$inst-big-total-height: 100px
$inst-big-image: '../img/sprite.png'
$inst-big: (551px, 0px, -551px, 0px, 100px, 100px, 871px, 100px, '../img/sprite.png', 'inst-big', )
$inst-inst-name: 'inst-inst'
$inst-inst-x: 250px
$inst-inst-y: 0px
$inst-inst-offset-x: -250px
$inst-inst-offset-y: 0px
$inst-inst-width: 72px
$inst-inst-height: 71px
$inst-inst-total-width: 871px
$inst-inst-total-height: 100px
$inst-inst-image: '../img/sprite.png'
$inst-inst: (250px, 0px, -250px, 0px, 72px, 71px, 871px, 100px, '../img/sprite.png', 'inst-inst', )
$inst-telegram-name: 'inst-telegram'
$inst-telegram-x: 174px
$inst-telegram-y: 0px
$inst-telegram-offset-x: -174px
$inst-telegram-offset-y: 0px
$inst-telegram-width: 66px
$inst-telegram-height: 67px
$inst-telegram-total-width: 871px
$inst-telegram-total-height: 100px
$inst-telegram-image: '../img/sprite.png'
$inst-telegram: (174px, 0px, -174px, 0px, 66px, 67px, 871px, 100px, '../img/sprite.png', 'inst-telegram', )
$inst-name: 'inst'
$inst-x: 63px
$inst-y: 0px
$inst-offset-x: -63px
$inst-offset-y: 0px
$inst-width: 27px
$inst-height: 26px
$inst-total-width: 871px
$inst-total-height: 100px
$inst-image: '../img/sprite.png'
$inst: (63px, 0px, -63px, 0px, 27px, 26px, 871px, 100px, '../img/sprite.png', 'inst', )
$telegram-big-name: 'telegram-big'
$telegram-big-x: 441px
$telegram-big-y: 0px
$telegram-big-offset-x: -441px
$telegram-big-offset-y: 0px
$telegram-big-width: 100px
$telegram-big-height: 100px
$telegram-big-total-width: 871px
$telegram-big-total-height: 100px
$telegram-big-image: '../img/sprite.png'
$telegram-big: (441px, 0px, -441px, 0px, 100px, 100px, 871px, 100px, '../img/sprite.png', 'telegram-big', )
$telegram-name: 'telegram'
$telegram-x: 100px
$telegram-y: 0px
$telegram-offset-x: -100px
$telegram-offset-y: 0px
$telegram-width: 27px
$telegram-height: 26px
$telegram-total-width: 871px
$telegram-total-height: 100px
$telegram-image: '../img/sprite.png'
$telegram: (100px, 0px, -100px, 0px, 27px, 26px, 871px, 100px, '../img/sprite.png', 'telegram', )
$vk-big-name: 'vk-big'
$vk-big-x: 771px
$vk-big-y: 0px
$vk-big-offset-x: -771px
$vk-big-offset-y: 0px
$vk-big-width: 100px
$vk-big-height: 100px
$vk-big-total-width: 871px
$vk-big-total-height: 100px
$vk-big-image: '../img/sprite.png'
$vk-big: (771px, 0px, -771px, 0px, 100px, 100px, 871px, 100px, '../img/sprite.png', 'vk-big', )
$vk-name: 'vk'
$vk-x: 137px
$vk-y: 0px
$vk-offset-x: -137px
$vk-offset-y: 0px
$vk-width: 27px
$vk-height: 26px
$vk-total-width: 871px
$vk-total-height: 100px
$vk-image: '../img/sprite.png'
$vk: (137px, 0px, -137px, 0px, 27px, 26px, 871px, 100px, '../img/sprite.png', 'vk', )
$whatsapp-big-name: 'whatsapp-big'
$whatsapp-big-x: 332px
$whatsapp-big-y: 0px
$whatsapp-big-offset-x: -332px
$whatsapp-big-offset-y: 0px
$whatsapp-big-width: 99px
$whatsapp-big-height: 100px
$whatsapp-big-total-width: 871px
$whatsapp-big-total-height: 100px
$whatsapp-big-image: '../img/sprite.png'
$whatsapp-big: (332px, 0px, -332px, 0px, 99px, 100px, 871px, 100px, '../img/sprite.png', 'whatsapp-big', )
$whatsapp-name: 'whatsapp'
$whatsapp-x: 0px
$whatsapp-y: 0px
$whatsapp-offset-x: 0px
$whatsapp-offset-y: 0px
$whatsapp-width: 18px
$whatsapp-height: 18px
$whatsapp-total-width: 871px
$whatsapp-total-height: 100px
$whatsapp-image: '../img/sprite.png'
$whatsapp: (0px, 0px, 0px, 0px, 18px, 18px, 871px, 100px, '../img/sprite.png', 'whatsapp', )
$youtube-big-name: 'youtube-big'
$youtube-big-x: 661px
$youtube-big-y: 0px
$youtube-big-offset-x: -661px
$youtube-big-offset-y: 0px
$youtube-big-width: 100px
$youtube-big-height: 100px
$youtube-big-total-width: 871px
$youtube-big-total-height: 100px
$youtube-big-image: '../img/sprite.png'
$youtube-big: (661px, 0px, -661px, 0px, 100px, 100px, 871px, 100px, '../img/sprite.png', 'youtube-big', )
$youtube-name: 'youtube'
$youtube-x: 28px
$youtube-y: 0px
$youtube-offset-x: -28px
$youtube-offset-y: 0px
$youtube-width: 25px
$youtube-height: 25px
$youtube-total-width: 871px
$youtube-total-height: 100px
$youtube-image: '../img/sprite.png'
$youtube: (28px, 0px, -28px, 0px, 25px, 25px, 871px, 100px, '../img/sprite.png', 'youtube', )
$spritesheet-width: 871px
$spritesheet-height: 100px
$spritesheet-image: '../img/sprite.png'
$spritesheet-sprites: ($inst-big, $inst-inst, $inst-telegram, $inst, $telegram-big, $telegram, $vk-big, $vk, $whatsapp-big, $whatsapp, $youtube-big, $youtube, )
$spritesheet: (871px, 100px, '../img/sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
